
CREATING THE ANGULAR APP ---
#install the @angular/cli
1) npm i -g @angular/cli

#check cli version
2) ng --version

#create an app
3) ng new first-ng-app  # optionally use --dry-run

#create an app with some configuration -- use this✅
4) ng new first-ng-app --inline-style --inline-template

--- important --
(*) go to angular.json and inside that we have -  "@schematics/angular:component": - delete the "inlineTemplate": true,
          "inlineStyle": true, (both of them)

// CREATING A COMPONENT --- (ng g c)
#short form -
#creates HeaderComponent src/app/header/(header component)
1) ng g c header
#full form -
ng generate components header 

#OR (in a nested directory)
2) ng g c components/header
#creates HeaderComponent inside src/app/components/header/(header component)
#inside the `src/app/components` folder

#creates the HomeComponent - 
3) ng g c home


// CREATING A SERVICES --- similar to global state managment -- (ng g s)
ng g service services/todo
#creates todos.service.ts inside `src/app/service`
in short form ----
ng g s services/todo

// CREATING DIRECTIVES ---Angular Directives allow you to add additional behavior to elements in our Angular applications.
(example)
ng g directive directives/highlight-completed-todo
#creates Directives folder inside app/directives


(*)To start the development server ---
npm start

// CREATE YOUR OWN PIPES ---
(eg)
ng g pipe pipes/filter-todos
#creates pipes folder inside app "app/pipes/


USE SIGNALS --
example -
export class HomeComponent {
  homemessage = signal("Hello, world! good day");

EVENT LISTENERS IN ANGULAR -- 
eg - onclick="handleclick()" then in angular: (click)="handleClick()"
<input class="bg-gray-100 border-1" type="text" (keyup)="keyUpHandler()">
 keyUpHandler(){
    console.log('user typed something in the input');
  }
--- if someone typed something

Another way of doing - if want to see which particular key was pressed(can work anywhere)
<input class="bg-gray-100 border-1" type="text" (keyup)="keyUpHandler($event)">
keyUpHandler(event: KeyboardEvent){
    console.log(`user pressed the ${event.key} key`)
  }


ROUTING(INBUILT) 
app.routes.ts ----

export const routes: Routes = [
    {
        path: '',
        pathMatch: 'full',
        loadComponent: async ()=>{
            return import('./home/home.component').then(
                (module)=>module.HomeComponent
            );
        },
    },
    {
        path: 'todos',
        pathMatch: 'full',
        loadComponent: async ()=>{
            return import('./todos/todos.component').then(
                (m)=>m.TodosComponent
            );
        },
    },
];



// IMPORTANT NOTE ---
useEffect ➝ ngOnInit or effect()
props ➝ @Input() or input()
useState ➝ signal()



// FAKE BACKEND -- JSON WEBSERVER -
make db.json in the root folder and then run with this --
json-server --watch db.json --port 3000




// Some Angular Components --
1) Angular Materials
2) Prime ng
3) Telerik components

// if when installing using npm, versions are different then do --legacy-peer-deps at the last


